#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @author: orleven

import struct
from lib.util.aiohttputil import open_connection
from lib.core.enums import ServicePortMap
from script import BaseScript

class Script(BaseScript):
    """
    CVE-2020-0796
    This project is base on SMBGhost which is used for scanning CVE-2020-0796 - SMBv3 RCE vulnerability
    https://github.com/ollypwn/SMBGhost
    Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" DisableCompression -Type DWORD -Value 1 -Force
    """

    def __init__(self):
        BaseScript.__init__(self)
        self.service_type = ServicePortMap.SMB

    async def prove(self):
        if self.base_url is None:
            try:
                reader, writer = await open_connection(self.host, self.port)
                pkt = b'\x00\x00\x00\xc0\xfeSMB@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00\x08\x00\x01\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x02\x00\x00\x00\x02\x02\x10\x02"\x02$\x02\x00\x03\x02\x03\x10\x03\x11\x03\x00\x00\x00\x00\x01\x00&\x00\x00\x00\x00\x00\x01\x00 \x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\n\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
                writer.write(pkt)
                data = await reader.read(4)
                if data:
                    nb, = struct.unpack(">I", data)
                    data = await reader.read(nb)
                    writer.close()
                    if not data[68:70] == b"\x11\x03" or not data[70:72] == b"\x02\x00":
                        return
                    else:
                        yield "CVE-2020-0796"
                        return

            except:
                pass